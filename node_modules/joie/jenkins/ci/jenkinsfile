#!/usr/bin/env groovy
@Library(['eng-build-utils']) _

pipeline {
    agent {
        label "myalerts-node92"
    }
    environment {
        ENV_NAME = "dev"
        JUNIT_REPORT_NAME='Tests'
        JUNIT_REPORT_PATH='test-results.xml'
        JUNIT_REPORT_STACK='1'
    }
    parameters {
        string(name: 'EMAIL_TO', defaultValue: '')
    }
    options {
        timestamps()
    }
    stages {
        stage('Provisioning') {
            steps {
                sh "whoami"
                sh "printenv"

                sh "nodejs -v"
                sh "npm -v"

                // sh "echo registry=https://nexus.devfactory.com/repository/myalerts-release-npm > $HOME/.npmrc"
                // sh "echo email=ci@aurea.com >> $HOME/.npmrc"
                // sh "echo always-auth=true >> $HOME/.npmrc"
                sh "echo '//registry.npmjs.org/:_authToken=ae726a08-7368-482b-bf5f-472b0bd4224c' > .npmrc"
            }
        }
        stage('Build') {
            steps {
                sh "npm install"
            }
        }
        stage('Test') {
            steps {
                sh "npm run test"
                sh "ls -a -1"
            }
        }
        stage('nexus') {
            steps {
                sh "npm pack"
                sh "npm publish"
                sh "ls -a -1"
            }
        }
        stage('Publish') {
            steps {
                junit 'test-results.xml'
                publishHTML([allowMissing: false, 
                    alwaysLinkToLastBuild: true, 
                    keepAll: true, 
                    reportDir: 'coverage', 
                    reportFiles: 'index.html', 
                    reportName: 'Coverage Report', 
                    reportTitles: ''])
            }
        }
      }
    post {
        always {
            script {
                comitterEmail = sh (
                    script: "git rev-parse HEAD | git show --format='%ae' | grep -m1 ''",
                    returnStdout: true
                ).trim()
            }
            step([$class: 'Mailer',
                recipients: "${comitterEmail}, ${env.EMAIL_TO}",
                notifyEveryUnstableBuild: true,
                sendToIndividuals: true
            ])
        }
    }
}